NODE/EXPRESS server aplikacija uvek ima arhitekturu koda sledeceg tipa:
Client i Server folder

U Server folderu se najcesce nalazi "app.js", "index.js" ili "server.js" javascript fajl koji je zapravo sama aplikacija
i povlaci sve potrebne module (koji su vec napisani, i uzeti sa Node Package Managera)

Posto zelimo da ostvarimo "napisi MODEL (klasu medikacija i korisnika) jednom, a koristi svuda", koristimo API za komuniciranje sa 
klijentom. Klijent na endpointima trazi podatke od servera, na sta mu server ukoliko je autorizovan za date podatke vraca podatke
u JSON formatu.

Controllers u folderu server upravo sluze toj logici pakovanja podataka u JSON.

Models u folderu server opisuju format koji ce podaci uzimati u bazi.

Routes definisu na koje URL-ove ce koji API da odgovara.

Util folder sluzi integraciji sa Reactom/Reduxom na klijentu.


// Redux Deo - Mihajlo



Uradjena je reprezentacia objekata medikacije u bazi, domen je spojen sa AWS-om, 
ako bude nekih prethodno nerazjasnjenih krajnjih slucajeva bice promena reprezentacije i controller funkcija u server folderu.


Autentikaciju radi Mihajlo.
U trenutku kada je ona funkcionalna, na AWS se podize funkcionalan cms.
Posto je kada se radi sa Reduxom - posao server developmenta jako spregnut sa frontendom, menjacemo uloge Mihajlo i ja na dalje po potrebi, odnosno
programiracu delove klijenta.


